rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Allow public read access to products and components
    match /products/{productId} {
      allow read: if true;
      allow write: if false; // No one can publicly change products
    }
    
    match /custom_hamper_components/{componentId} {
      allow read: if true;
      allow write: if false; // No one can publicly change components
    }

    // Rules for the 'users' collection 
    match /users/{userId} {
      // A user can create their own document if their ID matches the document ID
      allow create: if request.auth.uid == userId;
      // A user can read or update their own document
      allow read, update: if request.auth.uid == userId;
      // No one can delete user profiles
      allow delete: if false;
    }
    // ADD THIS ENTIRE BLOCK
    // It secures the user-specific addresses subcollection.
    // This rule ensures that a user can only read or write documents
    // if their authenticated UID matches the {userId} in the path.
    match /users/{userId}/addresses/{addressId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    // This secures the main orders collection.
    match /orders/{orderId} {
      // READ: A user can only read an order if their UID matches the userId stored on the order.
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;

      // CREATE: A user can create a new order if they are logged in and the order's
      // userId field in the request matches their own UID. This prevents a user
      // from creating an order on behalf of someone else.
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;

      // UPDATE/DELETE: Denied. Customers should not be able to change or delete their order history.
      allow update, delete: if false;
    }
  }
}